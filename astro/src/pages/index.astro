---
import { ViewTransitions } from 'astro:transitions';
import Timeline from "../components/Timeline.astro";
import timeline from "../data/timeline.json";

const items = (timeline as any[]);
const VERSION = "1.1.0"; // Major feature update: search, themes, API
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>timeline.523.life — Chase Pettet's Timeline</title>
  <meta name="description" content="A timeline of my online history featuring blog posts, saved articles, and social media activity.">
  <link rel="canonical" href="https://timeline.523.life/">
  <meta name="version" content={VERSION}>
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
  <meta http-equiv="Pragma" content="no-cache">
  <meta http-equiv="Expires" content="0">
  <link rel="alternate" type="application/rss+xml" title="Chase Pettet's Timeline" href="/rss.xml" />
  <link href="/pagefind/pagefind-ui.css" rel="stylesheet">
  <script is:inline src="/pagefind/pagefind-ui.js"></script>
  <ViewTransitions />
</head>
<body data-version={VERSION}>

<main>
  <div class="timeline-content">
    <header class="header">
      <h1>timeline.<a href="https://523.life" class="home-link">523.life</a></h1>
      <p>A timeline of my public online activity.</p>
      <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme" title="Toggle light/dark theme">
        <span class="theme-icon">🌙</span>
      </button>
    </header>

    <section class="controls" aria-label="Filters">
      <div id="search-container" class="search-container"></div>
      <div class="filter-actions">
        <button id="select-all" class="filter-action">All</button>
        <button id="select-none" class="filter-action">None</button>
      </div>
      <div class="filters" role="group" aria-label="Content types">
        <label title="My Writings"><input type="checkbox" name="type" value="blog" checked> Blog</label>
        <label title="Reading Material"><input type="checkbox" name="type" value="saved" checked> Articles</label>
        <label title="My Public Feed"><input type="checkbox" name="type" value="bluesky" checked> Bluesky</label>
        <label title="Github Releases"><input type="checkbox" name="type" value="release" checked> Releases</label>
        <label title="Activity on en.wiki.org"><input type="checkbox" name="type" value="wikipedia" checked> Wikipedia</label>
      </div>
    </section>

    <Timeline items={items} />
  </div>

  <div class="backdrop" id="panel-backdrop" hidden></div>
  <aside class="panel" id="detail-panel" role="complementary" aria-labelledby="panel-title">
    <header class="panel-header">
      <h2 id="panel-title">
        <span id="panel-title-text">About</span>
        <span id="panel-source-wrapper" hidden> | <a id="panel-source" href="#" target="_blank" rel="noopener" class="panel-source-link">Source ↗</a></span>
      </h2>
      <button id="panel-close" aria-label="Close" hidden>×</button>
    </header>
    <div id="panel-content">
      <div class="intro">
        <p>This is a chronological archive of my online presence, bringing together different content streams into a single unified view.</p>
        
        <h4>Content Types</h4>
        <ul class="legend">
          <li><span class="legend-dot" data-dot-type="blog"></span> <strong>Blog Posts</strong> — Technical writing and essays</li>
          <li><span class="legend-dot" data-dot-type="saved"></span> <strong>Articles</strong> — Bookmarks from Readwise</li>
          <li><span class="legend-dot" data-dot-type="bluesky"></span> <strong>Bluesky</strong> — Social media posts and thoughts</li>
          <li><span class="legend-dot" data-dot-type="release"></span> <strong>Releases</strong> — GitHub project releases and tags</li>
          <li><span class="legend-dot" data-dot-type="wikipedia"></span> <strong>Wikipedia</strong> — Contributions to Wikipedia</li>
        </ul>
        
        <h4>How to Use</h4>
        <p>Click on any item in the timeline to read more. Use the filters above to show or hide different content types. Hover over the colored dots to see timestamps.</p>
        
        <p class="muted-text">Built with Astro • Data fetched from multiple sources</p>
      </div>
    </div>
  </aside>
</main>

<footer>
  <p>© 2025 Chase Pettet — <a href="https://523.life">523.life</a> <span class="version">v{VERSION}</span> · Built with <a href="https://astro.build" target="_blank" rel="noopener">Astro</a> · <a href="/rss.xml" target="_blank" rel="noopener">RSS Feed</a></p>
</footer>

<style is:global>
  /* Light theme (old book - current) */
  :root[data-theme="light"], :root:not([data-theme]) {
    --bg: #f4ecd8;
    --panel: #faf6ed;
    --text: #3d2817;
    --muted: #7a6b5d;
    --accent: #c17a4f;
    --spine: #d4c4a8;
    --border: #d4c4a8;
    --card-bg: #fdfbf7;
  }
  
  /* Dark theme (darker old book) */
  :root[data-theme="dark"] {
    --bg: #2a2419;
    --panel: #342d23;
    --text: #e8dcc4;
    --muted: #a89a84;
    --accent: #d4956f;
    --spine: #4a3f32;
    --border: #4a3f32;
    --card-bg: #3a3228;
  }
  html, body { margin: 0; padding: 0; background: var(--bg); color: var(--text); font: 16px/1.6 Georgia, "Times New Roman", serif; transition: background-color 0.3s ease, color 0.3s ease; }
  main { max-width: 1200px; margin: 0 auto; padding: 24px; display: grid; grid-template-columns: 1fr minmax(320px, 420px); gap: 24px; }
  footer { max-width: 1200px; margin: 0 auto; padding: 24px 24px 32px; text-align: center; }
  footer p { margin: 0; color: var(--muted); font-size: 14px; }
  footer a { color: var(--accent); text-decoration: none; }
  footer a:hover { text-decoration: underline; }
  footer .version { opacity: 0.5; font-size: 12px; margin-left: 8px; }
  .timeline-content { grid-column: 1; }
  .header { text-align: center; margin-bottom: 16px; position: relative; }
  .header h1 { margin: 0 0 4px; font-size: 32px; font-weight: 600; color: var(--accent); letter-spacing: -0.02em; }
  .header p { margin: 0 0 16px; color: var(--muted); font-size: 15px; }
  .theme-toggle { position: absolute; top: 0; right: 0; background: var(--card-bg); border: 1px solid var(--border); border-radius: 8px; padding: 8px 12px; cursor: pointer; font-size: 18px; transition: all 0.2s; }
  .theme-toggle:hover { background: var(--panel); border-color: var(--accent); transform: scale(1.05); }
  .theme-icon { display: inline-block; }
  .home-link { color: inherit; text-decoration: none; transition: opacity 0.2s; }
  .home-link:hover { opacity: 0.7; text-decoration: underline; }
  .controls { position: sticky; top: 0; background: linear-gradient(var(--bg), rgba(244, 236, 216, 0.95)); padding: 12px 0; z-index: 10; backdrop-filter: blur(8px); margin-bottom: 12px; }
  .search-container { margin-bottom: 12px; max-width: 600px; margin-left: auto; margin-right: auto; }
  .filter-actions { display: flex; gap: 8px; justify-content: center; margin-bottom: 10px; }
  .filter-action { background: var(--card-bg); padding: 6px 16px; border-radius: 999px; border: 1px solid var(--border); color: var(--text); font-size: 13px; cursor: pointer; transition: all 0.2s; font-family: Georgia, "Times New Roman", serif; font-weight: 600; }
  .filter-action:hover { background: var(--accent); color: var(--bg); border-color: var(--accent); }
  .filters { display: flex; gap: 12px; flex-wrap: wrap; justify-content: center; }
  label { background: var(--card-bg); padding: 7px 14px; border-radius: 999px; border: 1px solid var(--border); color: var(--text); font-size: 14px; cursor: pointer; transition: all 0.2s; }
  label:hover { background: var(--panel); border-color: var(--accent); }
  input[type="checkbox"] { vertical-align: middle; margin-right: 6px; accent-color: var(--accent); }
  
  /* Panel styles */
  .panel { position: sticky; top: 12px; align-self: start; height: calc(100dvh - 24px); background: var(--panel); border: 1px solid var(--border); border-radius: 12px; padding: 20px; overflow: auto; box-shadow: 0 2px 12px rgba(0,0,0,0.08); }
  .panel-header { display: flex; align-items: center; gap: 12px; border-bottom: 2px solid var(--border); padding-bottom: 14px; margin-bottom: 20px; }
  .panel-header h2 { margin: 0; font-size: 14px; color: var(--muted); font-weight: 600; flex: 1; text-transform: uppercase; letter-spacing: 0.05em; font-family: system-ui, sans-serif; display: flex; align-items: center; flex-wrap: wrap; gap: 8px; justify-content: center; }
  .panel-source-link { color: var(--accent); text-decoration: none; font-size: 13px; font-weight: 600; transition: all 0.2s; white-space: nowrap; font-family: Georgia, "Times New Roman", serif; text-transform: none; letter-spacing: normal; }
  .panel-source-link:hover { text-decoration: underline; }
  #panel-close { background: var(--card-bg); color: var(--text); border: 1px solid var(--border); border-radius: 6px; padding: 6px 12px; cursor: pointer; font-size: 24px; line-height: 1; transition: all 0.2s; font-weight: 300; }
  #panel-close:hover { background: var(--bg); border-color: var(--accent); }
  #panel-content { line-height: 1.7; }
  #panel-content h3 { margin: 0 0 14px; font-size: 20px; color: #6d4c41; font-weight: 600; }
  #panel-content h4 { margin: 24px 0 10px; font-size: 13px; text-transform: uppercase; letter-spacing: 0.08em; color: var(--accent); font-weight: 700; font-family: system-ui, sans-serif; }
  #panel-content p { margin: 10px 0; color: var(--text); }
  #panel-content a { color: #c17a4f; text-decoration: underline; text-decoration-color: rgba(193, 122, 79, 0.3); text-decoration-thickness: 1px; }
  #panel-content a:hover { text-decoration-color: var(--accent); }
  .muted-text { color: var(--muted); font-size: 13px; font-style: italic; }
  .legend { list-style: none; padding: 0; margin: 12px 0; }
  .legend li { display: flex; align-items: center; gap: 12px; margin: 10px 0; line-height: 1.5; }
  .legend-dot { width: 12px; height: 12px; border-radius: 50%; border: 1px solid rgba(0,0,0,0.1); flex-shrink: 0; }
  .legend-dot[data-dot-type="blog"] { background: #5d4037; }
  .legend-dot[data-dot-type="saved"] { background: #7cb342; }
  .legend-dot[data-dot-type="bluesky"] { background: #1e88e5; }
  .legend-dot[data-dot-type="release"] { background: #fb8c00; }
  .legend-dot[data-dot-type="wikipedia"] { background: #636466; }
  .detail-title { margin: 0 0 16px; font-size: 22px; color: #6d4c41; line-height: 1.3; }
  .detail-content { margin: 16px 0; }
  .detail-content img { max-width: 100%; height: auto; border-radius: 8px; margin: 12px 0; border: 1px solid var(--border); }
  .backdrop { display: none; position: fixed; inset: 0; background: rgba(61, 40, 23, 0.6); backdrop-filter: blur(4px); z-index: 99; }

  @media (max-width: 980px) {
    main { display: block; }
    .timeline-content { grid-column: auto; }
    .panel { position: fixed; inset: auto 0 0 0; height: 80dvh; border-radius: 20px 20px 0 0; z-index: 100; transform: translateY(100%); transition: transform 0.3s ease-out; }
    .panel.mobile-open { transform: translateY(0); }
    .backdrop:not([hidden]) { display: block; }
  }
</style>

<script>
  // Theme toggle
  const themeToggle = document.getElementById('theme-toggle');
  const themeIcon = themeToggle?.querySelector('.theme-icon');
  const html = document.documentElement;
  
  // Load saved theme or default to light
  const savedTheme = localStorage.getItem('theme') || 'light';
  html.setAttribute('data-theme', savedTheme);
  if (themeIcon) themeIcon.textContent = savedTheme === 'dark' ? '☀️' : '🌙';
  
  themeToggle?.addEventListener('click', () => {
    const currentTheme = html.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    html.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    if (themeIcon) themeIcon.textContent = newTheme === 'dark' ? '☀️' : '🌙';
  });

  // Initialize Pagefind search
  window.addEventListener('DOMContentLoaded', () => {
    new window.PagefindUI({ 
      element: "#search-container",
      showSubResults: true,
      showImages: false,
      excerptLength: 15,
      translations: {
        placeholder: "Search timeline..."
      }
    });
  });

  const params = new URLSearchParams(location.search);
  const selected = new Set((params.get('types') ?? 'blog,saved,bluesky,release,wikipedia').split(',').filter(Boolean));
  
  const checkboxes = document.querySelectorAll('input[name="type"]') as NodeListOf<HTMLInputElement>;
  
  checkboxes.forEach((input) => {
    input.checked = selected.has(input.value);
    input.addEventListener('change', updateFilters);
  });
  
  function updateFilters() {
    const values = Array.from(checkboxes)
      .filter((i) => i.checked)
      .map((i) => i.value);
    
    if (values.length === 0) {
      params.delete('types');
    } else {
      params.set('types', values.join(','));
    }
    
    history.replaceState({}, '', params.toString() ? `?${params.toString()}` : location.pathname);
    document.dispatchEvent(new CustomEvent('filters:changed', { detail: { types: values } }));
  }
  
  // All button
  document.getElementById('select-all')?.addEventListener('click', () => {
    checkboxes.forEach((input) => input.checked = true);
    updateFilters();
  });
  
  // None button
  document.getElementById('select-none')?.addEventListener('click', () => {
    checkboxes.forEach((input) => input.checked = false);
    updateFilters();
  });
</script>

  <footer style="text-align: center; padding: 40px 16px; color: var(--muted); font-size: 14px;">
    <p>
      <a href="https://523.life" style="color: var(--accent); text-decoration: none;">← Back to 523.life</a>
    </p>
  </footer>

</main>

</body>
</html>
